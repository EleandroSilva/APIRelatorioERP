unit Model.DAO.Imp.Entidade.Usuario;

interface

uses
  Data.DB,

  Model.DAO.Entidades.Interfaces,
  Model.Entidade.Usuario.Interfaces,
  Model.Entidade.Usuario,
  Model.Conexao.Query.Interfaces,
  Model.Imp.Conexao.FDQuery;

type
  TDAOUsuario = class(TInterfacedObject, iDAOEntidades<iEntidadeUsuario>)
    private
      FUsuario : iEntidadeUsuario;
      FDConexao : iQuery;
      Const
       FSQL=('select * from usuario');
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iDAOEntidades<iEntidadeUsuario>;

      function ListarTodos : iDAOEntidades<iEntidadeUsuario>;

      function This        : iEntidadeUsuario;
  end;

implementation

{ TDAOUsuario }

constructor TDAOUsuario.Create;
begin
  FUsuario  := TUsuario.Create(Self);
  FDConexao := TModelFDQuery.New;
end;

destructor TDAOUsuario.Destroy;
begin
  inherited;
end;

class function TDAOUsuario.New: iDAOEntidades<iEntidadeUsuario>;
begin
  Result := Self.Create;
end;

function TDAOUsuario.ListarTodos: iDAOEntidades<iEntidadeUsuario>;
begin
  Result := Self;
  FQuery
        .SQL(FSQL)
        .Open
        .DataSet;
end;

function TDAOUsuario.This: iEntidadeUsuario;
begin
  Result := FUsuario;
end;

end.
