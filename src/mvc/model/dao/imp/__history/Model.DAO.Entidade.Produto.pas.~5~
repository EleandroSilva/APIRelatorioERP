unit Model.DAO.Entidade.Produto;

interface

uses
  Model.Conexao.Interfaces,
  Model.DAO.Entidades.Interfaces,
  Model.Entidade.Produto.Interfaces,
  Model.Entidade.Produto,
  Model.Conexao.Firedac.MySQL, System.SysUtils;

type
  TDAOProduto = class(TInterfacedObject, iDAOEntidades<iEntidadeProduto>)
    private
      FDConexao : iConexao;
      FProduto : iEntidadeProduto;
      FSQL : String;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iDAOEntidades<iEntidadeProduto>;

      function Inserir     : iDAOEntidades<iEntidadeProduto>;
      function ListarTodos : iDAOEntidades<iEntidadeProduto>;
      function This        : iEntidadeProduto;
  end;


implementation

{ TDAProduto }

constructor TDAOProduto.Create;
begin
  FProduto  := TProduto.New(Self);
  FDConexao := TConexaoFiredacMySQL.New;
end;

destructor TDAOProduto.Destroy;
begin
  FreeAndNil(FProduto);
  FreeAndNil(FDConexao);
  inherited;
end;

class function TDAOProduto.New: iDAOEntidades<iEntidadeProduto>;
begin
  Result := Self.Create;
end;

function TDAOProduto.Inserir: iDAOEntidades<iEntidadeProduto>;
begin
  Result := Self;
  FSQL :='';
  FDConexao.StartTransaction;
  try
    FSQL :='insert into produto values (?, ?)';
    FDConexao.

    FDConexao.Commit;
  except
    FDConexao.Rollback;
    raise Exception.Create('Erro ao tentar gravar o registro.');
  end;

end;

function TDAOProduto.ListarTodos: iDAOEntidades<iEntidadeProduto>;
begin

end;

function TDAOProduto.This: iEntidadeProduto;
begin

end;

end.
