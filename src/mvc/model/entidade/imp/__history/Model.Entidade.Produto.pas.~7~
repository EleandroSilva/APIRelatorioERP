unit Model.Entidade.Produto;

interface
uses
  Model.Entidade.Produto.Interfaces,
  Model.DAO.Entidades.Interfaces;

type
  TEntidadeProduto = class(TInterfacedObject, iEntidadeProduto)
    private
      [weak]
      FParent  : iDAOEntidades<iEntidadeProduto>;
      FId      : Integer;
      FNome    : String;
    public
      constructor Create(Parent : iDAOEntidades<iEntidadeProduto>);
      destructor Destroy; override;
      class function New(Parent : iDAOEntidades<iEntidadeProduto>) :iEntidadeProduto;

      function ID(Value : Integer)  : iEntidadeProduto; overload;
      function ID                   : Integer; overload;
      function Nome(Value : String) : iEntidadeProduto; overload;
      function Nome                 : String; overload;
      function &End : iDAOEntidades<iEntidadeProduto>;
  end;

implementation

{ TProduto }

constructor TEntidadeProduto.Create(Parent: iDAOEntidades<iEntidadeProduto>);
begin
  FParent := Parent;
end;

destructor TEntidadeProduto.Destroy;
begin
  inherited;
end;

class function TEntidadeProduto.New(Parent: iDAOEntidades<iEntidadeProduto>): iEntidadeProduto;
begin
  Result := Self.Create(Parent);
end;

function TEntidadeProduto.ID(Value: Integer): iEntidadeProduto;
begin
  Result := Self;
  FId := Value;
end;

function TEntidadeProduto.ID: Integer;
begin
  Result := FId;
end;

function TEntidadeProduto.Nome(Value: String): iEntidadeProduto;
begin
  Result := Self;
  FNome := Value;
end;

function TEntidadeProduto.Nome: String;
begin
  Result := FNome;
end;

function TEntidadeProduto.&End: iDAOEntidades<iEntidadeProduto>;
begin
  Result := FParent;
end;

end.
