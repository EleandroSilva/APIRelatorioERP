unit Model.Imp.Entidades.Factory;

interface

uses
  Model.Entidades.Factory.Interfaces,
  Model.Entidade.Usuario.Interfaces,
  Model.Entidade.Usuario,
  Model.DAO.Entidades.Interfaces;

type
  TEntidadeFactory = class(TInterfacedObject, iEntidadeFactory)
  private
    FDAO: iDAOEntidades<iEntidadeUsuario>;
    FUsuario : iEntidadeUsuario;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: iEntidadeFactory;

    function Usuario: iEntidadeUsuario;
  end;

implementation

{ TModelEntidadeFactory }

constructor TEntidadeFactory.Create;
begin
  //
end;

destructor TEntidadeFactory.Destroy;
begin
  //
  inherited;
end;

class function TEntidadeFactory.New: iEntidadeFactory;
begin
  Result := Self.Create;
end;

function TEntidadeFactory.Usuario: iEntidadeUsuario;
begin
  if not Assigned(FUsuario) then
    FUsuario := TUsuario.New(Result);

  Result := FUsuario;
end;

end.
