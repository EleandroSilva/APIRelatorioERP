unit Model.Conexao.Firedac;

interface

uses
  Data.DB,
  System.SysUtils,
  System.JSON,

  FireDAC.UI.Intf,
  FireDAC.FMXUI.Wait,
  FireDAC.Stan.Intf,
  FireDAC.Comp.UI,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.Phys.MySQL,
  FireDAC.VCLUI.Wait,
  FireDAC.Comp.Client,
  FireDAC.Stan.Param,
  FireDAC.DatS,
  FireDAC.DApt.Intf,
  FireDAC.DApt,
  FireDAC.Comp.DataSet,

  DataSetConverter4D.Helper,
  DataSetConverter4D.Impl,

  Model.Conexao.Interfaces,
  Model.Conexao.Configuracoes.Interfaces,
  Model.Conexao.Configuracoes.MySQL;

type
  TConexaoFiredac = class(TInterfacedObject, iConexao)
    private
      FConexao           : TFDConnection;
      FDriverMySQL       : TFDPhysMySQLDriverLink;
      FConfiguracaoMySQL : iConexaoConfiguracoesMySQL;

      procedure LerArquivoIni;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iConexao;

      function Conexao   : TObject;
  end;


implementation


{ TConexaoFiredac }

constructor TConexaoFiredac.Create;
begin
  FConexao           := TFDConnection.Create(nil);
  FDriverMySQL       := TFDPhysMySQLDriverLink.Create(nil);
  FConfiguracaoMySQL := TConexaoConfiguracoesMySQL.New;
  LerArquivoIni;
end;

destructor TConexaoFiredac.Destroy;
begin
  FreeAndNil(FConexao);
  FreeAndNil(FDriverMySQL);
  inherited;
end;

class function TConexaoFiredac.New: iConexao;
begin
  Result := Self.Create;
end;

procedure TConexaoFiredac.LerArquivoIni;
begin
  try
    FConexao           := TFDConnection.Create(nil);
    FDriverMySQL       := TFDPhysMySQLDriverLink.Create(nil);
    FConfiguracaoMySQL := TConexaoConfiguracoesMySQL.New;

    FDriverMySQL.VendorLib   := FConfiguracaoMySQL.VendorLib;
    FConexao.Params.DriverID := FConfiguracaoMySQL.DriverName;//MySQL
    FConexao.Params.Database := FConfiguracaoMySQL.Database;//nome da base de dados
    FConexao.Params.UserName := FConfiguracaoMySQL.UserName;// 'root';
    FConexao.Params.Password := FConfiguracaoMySQL.Password;
    FConexao.Params.Add('Port='+FConfiguracaoMySQL.Port);
    FConexao.Params.Add('utf8mb4');
    FConexao.Params.Add('Server='+FConfiguracaoMySQL.ServerHost);
    FConexao.LoginPrompt     := False;
    FConexao.Connected;
  except
    on e: Exception do
    raise Exception.Create('Erro ao tentar se conectar com a base de dados: ' +e.Message);
  end;
end;


function TConexaoFiredac.Conexao: TObject;
begin

end;

end.
